apiVersion: v1
kind: Namespace
metadata:
  name: devs
---
apiVersion: v1
kind: Namespace
metadata:
  name: back
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-cm
  namespace: devs
data:
  REDIS_HOST: redis.back.svc.cluster.local
  REDIS_PORT: '6379'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: devs
  labels:
    app: frontend-app
    role: frontend
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-app
      role: frontend
  template:
    metadata:
      labels:
        app: flask-app
        role: frontend
    spec:
      containers:
      - name: flask
        image: arogudl/flask-counter
        ports:
        - containerPort: 5000
        envFrom:
          - configMapRef:
              name: flask-cm
---
apiVersion: v1
kind: Pod
metadata:
  name: redis
  namespace: back
  labels:
    app: flask-app
    role: db
spec:
  containers:
  - name: redis
    image: redis:latest
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: back
spec:
  selector:
    app: flask-app
    role: db
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: devs
spec:
  selector:
    app.kubernetes.io/name: flask-app
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
